plugins {
	id 'java'
	id "org.xbib.gradle.plugin.git" version "2.0.0"
}

java {
     sourceCompatibility = JavaVersion.toVersion(11)
     targetCompatibility = JavaVersion.toVersion(11)
}

repositories {
	     jcenter()
}

dependencies {
	     testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
	     testImplementation 'org.hamcrest:hamcrest-library:2.2'

}

test {
     ignoreFailures = true
     useJUnitPlatform()

}

task clonePages() {
	doLast {
		mkdir 'build/gh-pages'
		def thisRepo = rootProject.projectDir.toString()
		def pagesDir = "$buildDir/gh-pages"
		project.delete {
			delete pagesDir
		}
		def grgit = git.clone {
			dir = pagesDir
			uri = 'file:' + thisRepo
			bare = false
			refToCheckout = 'gh-pages'
		}
		grgit.checkout {
			branch = 'gh-pages'
		}
	}
}

task reports (dependsOn: ['test', 'javadoc'])

task copyDocs (type: Copy) {
     from(file("build/docs"))
     into(file("build/gh-pages/gitLab2/docs/"))
}

task copyReports (type: Copy) {
     from(file("build/reports"))
     into(file("build/gh-pages/gitLab2/reports/"))
}

task deployReports (dependsOn: ['reports', 'copyDocs', 'copyReports']) {
     group = "Reporting"
     description 'Copies reports to the gh-pages branch in preparation for a future push to GitHub'
     doLast {
     	def pagesDir = "$buildDir/gh-pages"
     	def grgit = git.open {
     		dir = pagesDir + "/.git"
     	}
     	grgit.add (update: false, patterns: ['reports/', 'docs/'])
     	grgit.add (update: true, patterns: ['reports/', 'docs/'])
     	grgit.commit {
     		message = "Updating web pages"
     	}
     	grgit.push { }
     }
}